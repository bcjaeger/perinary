% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/append.R
\name{append_term_key}
\alias{append_term_key}
\title{Append Model Output with Missing Terms}
\usage{
append_term_key(
  data,
  dictionary = NULL,
  term_separator = "",
  term_colname = "term"
)
}
\arguments{
\item{data}{A data frame or tibble containing model output, typically
from \code{\link[broom:reexports]{broom::tidy()}}. Must contain a column that identifies model terms.}

\item{dictionary}{A \link[=data_dictionary]{data dictionary} object. If \code{NULL}, uses the default dictionary set via \code{\link[=set_default_dictionary]{set_default_dictionary()}}.}

\item{term_separator}{A string used to separate variable names and
category values when constructing or matching terms. Default is \code{""}
to match the default separator that most R modeling functions use.}

\item{term_colname}{Name of the column in \code{data} that contains term
identifiers. Default is \code{"term"}.}
}
\value{
A tibble with the original \code{data} joined to the term key from
the dictionary. The result includes additional columns like \code{variable}
and \code{category}, and ensures consistent ordering of model terms with
appended reference rows (if missing).
}
\description{
Add columns indicating variable name, category level, category label, and
reference groups to the model output (a row is also added for each reference
group)
}
\details{
The function uses the \code{term} column (or other specified column) in the
input \code{data} to match with a term key derived from the dictionary.
The final output includes a \code{variable} column and preserves term order,
appending reference terms (if needed) for completeness.
}
\examples{

library(broom)

fit <- tidy(lm(Sepal.Length ~ ., data = iris))

append_term_key(fit, as_data_dictionary(iris))
}
