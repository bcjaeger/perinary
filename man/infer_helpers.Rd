% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/infer.R
\name{infer_helpers}
\alias{infer_helpers}
\alias{infer_dotdot}
\alias{infer_meta}
\alias{infer_overlapping_variables}
\title{Internal inference helpers}
\usage{
infer_dotdot(..., .list = NULL)

infer_meta(dictionary)

infer_overlapping_variables(dictionary, data, warn_unmatched)
}
\arguments{
\item{...}{Name–value pairs or other objects to collect into a list.}

\item{.list}{A pre-assembled list. If supplied and non-\code{NULL}, it takes
precedence over \code{...}.}

\item{dictionary}{A \code{DataDictionary} or \code{NULL}. If \code{NULL}, the function
attempts to use the package default set via \code{\link[=set_default_dictionary]{set_default_dictionary()}}.}

\item{data}{A data frame or data.table whose column names will be checked
against the dictionary.}

\item{warn_unmatched}{Logical. If \code{TRUE}, emit a single warning listing
variables present in \code{data} but absent from the dictionary.}
}
\value{
\code{infer_dotdot()} returns a \strong{list}. If \code{.list} is non-\code{NULL}, it is
returned as-is; otherwise \code{list(...)} is returned.

\code{infer_meta()} returns a validated \strong{\code{DataDictionary}}.

\code{infer_overlapping_variables()} returns a \strong{character vector} of column
names that are present in both \code{data} and the dictionary.
}
\description{
Small utilities used across \code{perinary} to standardize inputs:
\itemize{
\item \strong{\code{infer_dotdot()}}: Canonicalizes \code{...}/\code{.list} into a single list.
\item \strong{\code{infer_meta()}}: Resolves the \code{DataDictionary} to use (argument or
package default) and validates its class.
\item \strong{\code{infer_overlapping_variables()}}: Finds variables present in both
\code{data} and the dictionary (optionally warning about unmatched columns).
}

These are \strong{not exported} but documented for maintainers.
}
\details{
\code{infer_meta()} resolves the effective dictionary to use by preferring
the provided \code{dictionary} and falling back to the package default stored
in \code{.perinary_internal$dictionary}. If neither is available, an error is
thrown with guidance on creating (\code{\link[=as_data_dictionary]{as_data_dictionary()}}) or setting
(\code{\link[=set_default_dictionary]{set_default_dictionary()}}) a dictionary.

“Unmatched” variables are those in \code{names(data)} that the dictionary
does not define (per \code{dictionary$get_names()}). When \code{warn_unmatched}
is \code{TRUE}, the function warns once with a concise list and guidance for
suppressing the warning.
}
\section{Conventions}{

\itemize{
\item Functions never modify inputs.
\item Errors use \code{rlang::abort()} with actionable guidance.
\item Variable names in messages are shown explicitly (e.g., \code{date_measure}).
}
}

\seealso{
\code{\link[=data_dictionary]{data_dictionary()}}, \code{\link[=as_data_dictionary]{as_data_dictionary()}}, \code{\link[=set_default_dictionary]{set_default_dictionary()}}
}
\keyword{internal}
