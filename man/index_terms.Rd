% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/index.R
\name{index_terms}
\alias{index_terms}
\title{Order rows by dictionary terms}
\usage{
index_terms(data, dictionary = NULL, names = "name", levels = "level")
}
\arguments{
\item{data}{A data frame or tibble containing rows to order. Must
include columns that identify the variable name and category level.}

\item{dictionary}{A \link[=data_dictionary]{data dictionary} object. If \code{NULL}, uses the default dictionary set via \code{\link[=set_default_dictionary]{set_default_dictionary()}}.}

\item{names}{Character value giving the column name that stores the
variable name in \code{data}. Default is \code{"name"}.}

\item{levels}{Character value giving the column name that stores the
category code/level in \code{data}. Default is \code{"level"}.}
}
\value{
The same type as \code{data}, with rows re-ordered to match the
order of variables in the dictionary and, within nominal variables,
the order of categories.
}
\description{
Reorders a data frame so that rows associated with nominal variables
follow the order defined in a \code{DataDictionary}. This is useful when
you want multiple outputs to present variables in a consistent order.
}
\examples{

dd <- data_dictionary(
  nominal_variable(
    "gender",
    label = "Gender",
    category_levels = c("M", "F"),
    category_labels = c("Male", "Female")
  )
)

df <- tibble::tibble(
  name = c("gender", "gender"),
  level = c("F", "M"),
  n = c(12, 18)
)

index_terms(df, dictionary = dd)

}
