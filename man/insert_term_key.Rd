% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/insert.R
\name{insert_term_key}
\alias{insert_term_key}
\title{Insert Term Key into Modeling Output}
\usage{
insert_term_key(data, dictionary, term_separator = "", term_colname = "term")
}
\arguments{
\item{data}{A data frame or tibble containing model output, typically
from \code{\link[broom:reexports]{broom::tidy()}}. Must contain a column that identifies model terms.}

\item{dictionary}{A data dictionary created with \code{\link[=as_data_dictionary]{as_data_dictionary()}}
or related functions, containing meta data for nominal variables.}

\item{term_separator}{A string used to separate variable names and
category values when constructing or matching terms. Default is \code{""}.}

\item{term_colname}{Name of the column in \code{data} that contains term
identifiers. Default is \code{"term"}.}
}
\value{
A tibble with the original \code{data} joined to the term key from
the dictionary. The result includes additional columns like \code{variable}
and \code{category}, and ensures consistent ordering of model terms with
appended reference rows (if missing).
}
\description{
Merges category-level metadata from a dictionary into a data frame
containing modeling terms (e.g., from \code{\link[broom:reexports]{broom::tidy()}}).
This function is most useful when you want to annotate model output
(such as regression coefficients) with human-readable labels or
structured metadata about nominal variables.
}
\details{
The function uses the \code{term} column (or other specified column) in the
input \code{data} to match with a term key derived from the dictionary.
The final output includes a \code{variable} column and preserves term order,
appending reference terms (if needed) for completeness.
}
\examples{

library(perinary)
library(broom)
fit <- lm(Sepal.Length ~ ., data = iris)

fit_tidy <- broom::tidy(fit)

insert_term_key(fit_tidy, as_data_dictionary(iris))
}
