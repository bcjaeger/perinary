% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assert.R
\name{assert_helpers}
\alias{assert_helpers}
\alias{assert_valid_field}
\alias{assert_in_set}
\alias{assert_valid_dotdot}
\title{Internal assertion helpers}
\usage{
assert_valid_field(name, type, field, suggest = NULL)

assert_in_set(values, choices, value_type = "values", variable = NULL)

assert_valid_dotdot(..., .list, names_required = TRUE)
}
\arguments{
\item{name}{Character scalar. Variable name being validated.}

\item{type}{Character scalar. Variable type as a readable noun
(e.g., \code{"numeric"}, \code{"nominal"}, \code{"identifier"}).}

\item{field}{Character scalar. The metadata field that was supplied
(e.g., \code{"category_labels"}, \code{"divby_modeling"}).}

\item{suggest}{Optional character scalar with guidance for the user
(e.g., \code{"use set_category_labels()"}).}

\item{values}{Character vector of user-supplied values to check.}

\item{choices}{Character vector of allowed values.}

\item{value_type}{Character scalar used in messages to describe the
\code{values} (default \code{"values"}). Set to something specific like
\code{"category levels"} when helpful.}

\item{variable}{Optional character scalar. If provided, the error
message will name the variable associated with the failed check.}

\item{...}{Zero or more unquoted inputs (to be collected into a list
by the caller). Intended to be mutually exclusive with \code{.list}.}

\item{.list}{Optional pre-assembled list of inputs. Intended to be
mutually exclusive with \code{...}.}
}
\value{
\code{assert_valid_field()} returns \code{NULL} invisibly on success; otherwise
it aborts with an informative message.

\code{assert_in_set()} returns \code{NULL} invisibly when all \code{values} are in
\code{choices}; otherwise it aborts with a bulleted list of unknown values and
the recognized set.

\code{assert_valid_dotdot()} returns \code{NULL} invisibly; it aborts if both
\code{...} and \code{.list} are supplied, and it warns if both are empty.
}
\description{
Lightweight assertions used across \code{perinary} to provide clear,
actionable error and warning messages:
\itemize{
\item \strong{\code{assert_valid_field()}}: error if a field is not valid for a
variable type (e.g., category metadata on numeric variables).
\item \strong{\code{assert_in_set()}}: error if one or more values are not among the
allowed choices, with a readable list of unknown and recognized values.
\item \strong{\code{assert_valid_dotdot()}}: validate that either \code{...} \strong{or} \code{.list}
is used (not both). Warn if both are empty.
}

These helpers are not intended for end-users; they exist to keep error
messages consistent and informative within the package.
}
\section{Conventions}{

\itemize{
\item Errors use \code{rlang::abort()} with a bulleted message (via \code{glue}).
\item Messages reference variable names and fields explicitly (e.g.,
\code{`date_measure`}).
\item Helpers do not modify inputs; they only validate and signal.
}
}

\keyword{internal}
